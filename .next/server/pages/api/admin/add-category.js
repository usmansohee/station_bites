/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function() {
var exports = {};
exports.id = "pages/api/admin/add-category";
exports.ids = ["pages/api/admin/add-category"];
exports.modules = {

/***/ "./src/pages/api/admin/add-category.js":
/*!*********************************************!*\
  !*** ./src/pages/api/admin/add-category.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../util/mongodb */ \"./src/util/mongodb.js\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (async (req, res) => {\n  try {\n    if (req.method === \"POST\") {\n      var _req$cookies;\n\n      const {\n        db\n      } = await (0,_util_mongodb__WEBPACK_IMPORTED_MODULE_0__.connectToDatabase)(); // Get session ID from request headers or cookies\n\n      const sessionId = req.headers['x-session-id'] || ((_req$cookies = req.cookies) === null || _req$cookies === void 0 ? void 0 : _req$cookies.adminSessionId);\n\n      if (!sessionId) {\n        return res.status(401).json({\n          message: \"Unauthorized - No session\"\n        });\n      } // Convert string session ID to ObjectId\n\n\n      let sessionObjectId;\n\n      try {\n        sessionObjectId = new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(sessionId);\n      } catch (error) {\n        return res.status(401).json({\n          message: \"Unauthorized - Invalid session format\"\n        });\n      } // Find session in database\n\n\n      const session = await db.collection(\"sessions\").findOne({\n        _id: sessionObjectId,\n        expires: {\n          $gt: new Date().toISOString()\n        }\n      });\n\n      if (!session || !session.admin) {\n        return res.status(401).json({\n          message: \"Unauthorized - Invalid or expired session\"\n        });\n      }\n\n      const {\n        name\n      } = req.body; // Validate input\n\n      if (!name || typeof name !== 'string' || name.trim().length < 2) {\n        return res.status(400).json({\n          message: \"Category name must be at least 2 characters long\"\n        });\n      }\n\n      const trimmedName = name.trim(); // Check if category already exists\n\n      const existingCategory = await db.collection(\"categories\").findOne({\n        name: {\n          $regex: new RegExp(`^${trimmedName}$`, 'i')\n        }\n      });\n\n      if (existingCategory) {\n        return res.status(409).json({\n          message: \"Category already exists\"\n        });\n      } // Insert the category\n\n\n      const result = await db.collection(\"categories\").insertOne({\n        name: trimmedName,\n        createdAt: new Date()\n      });\n\n      if (result.insertedId) {\n        return res.status(200).json({\n          message: \"Category added successfully\",\n          categoryId: result.insertedId\n        });\n      } else {\n        return res.status(500).json({\n          message: \"Failed to add category\"\n        });\n      }\n    } else {\n      return res.status(405).json({\n        message: \"Method not allowed\"\n      });\n    }\n  } catch (err) {\n    console.error(\"Add category error:\", err);\n    return res.status(500).json({\n      message: \"Internal Server Error\"\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96aW5nZXIvLi9zcmMvcGFnZXMvYXBpL2FkbWluL2FkZC1jYXRlZ29yeS5qcz9mY2ExIl0sIm5hbWVzIjpbInJlcSIsInJlcyIsIm1ldGhvZCIsImRiIiwiY29ubmVjdFRvRGF0YWJhc2UiLCJzZXNzaW9uSWQiLCJoZWFkZXJzIiwiY29va2llcyIsImFkbWluU2Vzc2lvbklkIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJzZXNzaW9uT2JqZWN0SWQiLCJPYmplY3RJZCIsImVycm9yIiwic2Vzc2lvbiIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwiX2lkIiwiZXhwaXJlcyIsIiRndCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImFkbWluIiwibmFtZSIsImJvZHkiLCJ0cmltIiwibGVuZ3RoIiwidHJpbW1lZE5hbWUiLCJleGlzdGluZ0NhdGVnb3J5IiwiJHJlZ2V4IiwiUmVnRXhwIiwicmVzdWx0IiwiaW5zZXJ0T25lIiwiY3JlYXRlZEF0IiwiaW5zZXJ0ZWRJZCIsImNhdGVnb3J5SWQiLCJlcnIiLCJjb25zb2xlIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUVBLCtEQUFlLE9BQU9BLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUMvQixNQUFJO0FBQ0EsUUFBSUQsR0FBRyxDQUFDRSxNQUFKLEtBQWUsTUFBbkIsRUFBMkI7QUFBQTs7QUFDdkIsWUFBTTtBQUFFQztBQUFGLFVBQVMsTUFBTUMsZ0VBQWlCLEVBQXRDLENBRHVCLENBR3ZCOztBQUNBLFlBQU1DLFNBQVMsR0FBR0wsR0FBRyxDQUFDTSxPQUFKLENBQVksY0FBWixzQkFBK0JOLEdBQUcsQ0FBQ08sT0FBbkMsaURBQStCLGFBQWFDLGNBQTVDLENBQWxCOztBQUVBLFVBQUksQ0FBQ0gsU0FBTCxFQUFnQjtBQUNaLGVBQU9KLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLGlCQUFPLEVBQUU7QUFBWCxTQUFyQixDQUFQO0FBQ0gs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Q0EsV0FBT3BDLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLGFBQU8sRUFBRTtBQUFYLEtBQXJCLENBQVA7QUFDSDtBQUNKLENBckVEIiwiZmlsZSI6Ii4vc3JjL3BhZ2VzL2FwaS9hZG1pbi9hZGQtY2F0ZWdvcnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0VG9EYXRhYmFzZSB9IGZyb20gXCIuLi8uLi8uLi91dGlsL21vbmdvZGJcIjtcbmltcG9ydCB7IE9iamVjdElkIH0gZnJvbSBcIm1vbmdvZGJcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHJlcS5tZXRob2QgPT09IFwiUE9TVFwiKSB7XG4gICAgICAgICAgICBjb25zdCB7IGRiIH0gPSBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBHZXQgc2Vzc2lvbiBJRCBmcm9tIHJlcXVlc3QgaGVhZGVycyBvciBjb29raWVzXG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uSWQgPSByZXEuaGVhZGVyc1sneC1zZXNzaW9uLWlkJ10gfHwgcmVxLmNvb2tpZXM/LmFkbWluU2Vzc2lvbklkO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoIXNlc3Npb25JZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVW5hdXRob3JpemVkIC0gTm8gc2Vzc2lvblwiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDb252ZXJ0IHN0cmluZyBzZXNzaW9uIElEIHRvIE9iamVjdElkXG4gICAgICAgICAgICBsZXQgc2Vzc2lvbk9iamVjdElkO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uT2JqZWN0SWQgPSBuZXcgT2JqZWN0SWQoc2Vzc2lvbklkKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbWVzc2FnZTogXCJVbmF1dGhvcml6ZWQgLSBJbnZhbGlkIHNlc3Npb24gZm9ybWF0XCIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEZpbmQgc2Vzc2lvbiBpbiBkYXRhYmFzZVxuICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJzZXNzaW9uc1wiKS5maW5kT25lKHsgXG4gICAgICAgICAgICAgICAgX2lkOiBzZXNzaW9uT2JqZWN0SWQsXG4gICAgICAgICAgICAgICAgZXhwaXJlczogeyAkZ3Q6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFzZXNzaW9uIHx8ICFzZXNzaW9uLmFkbWluKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbWVzc2FnZTogXCJVbmF1dGhvcml6ZWQgLSBJbnZhbGlkIG9yIGV4cGlyZWQgc2Vzc2lvblwiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCB7IG5hbWUgfSA9IHJlcS5ib2R5O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBWYWxpZGF0ZSBpbnB1dFxuICAgICAgICAgICAgaWYgKCFuYW1lIHx8IHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyB8fCBuYW1lLnRyaW0oKS5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogXCJDYXRlZ29yeSBuYW1lIG11c3QgYmUgYXQgbGVhc3QgMiBjaGFyYWN0ZXJzIGxvbmdcIiB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgdHJpbW1lZE5hbWUgPSBuYW1lLnRyaW0oKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgY2F0ZWdvcnkgYWxyZWFkeSBleGlzdHNcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nQ2F0ZWdvcnkgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiY2F0ZWdvcmllc1wiKS5maW5kT25lKHsgXG4gICAgICAgICAgICAgICAgbmFtZTogeyAkcmVnZXg6IG5ldyBSZWdFeHAoYF4ke3RyaW1tZWROYW1lfSRgLCAnaScpIH0gXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGV4aXN0aW5nQ2F0ZWdvcnkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDkpLmpzb24oeyBtZXNzYWdlOiBcIkNhdGVnb3J5IGFscmVhZHkgZXhpc3RzXCIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEluc2VydCB0aGUgY2F0ZWdvcnlcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJjYXRlZ29yaWVzXCIpLmluc2VydE9uZSh7XG4gICAgICAgICAgICAgICAgbmFtZTogdHJpbW1lZE5hbWUsXG4gICAgICAgICAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHJlc3VsdC5pbnNlcnRlZElkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiQ2F0ZWdvcnkgYWRkZWQgc3VjY2Vzc2Z1bGx5XCIsXG4gICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5SWQ6IHJlc3VsdC5pbnNlcnRlZElkIFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkZhaWxlZCB0byBhZGQgY2F0ZWdvcnlcIiB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IG1lc3NhZ2U6IFwiTWV0aG9kIG5vdCBhbGxvd2VkXCIgfSk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkFkZCBjYXRlZ29yeSBlcnJvcjpcIiwgZXJyKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIiB9KTtcbiAgICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/api/admin/add-category.js\n");

/***/ }),

/***/ "./src/util/mongodb.js":
/*!*****************************!*\
  !*** ./src/util/mongodb.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectToDatabase\": function() { return /* binding */ connectToDatabase; }\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nconst MONGODB_DB = process.env.MONGODB_DB;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\n}\n\nif (!MONGODB_DB) {\n  throw new Error(\"Please define the MONGODB_DB environment variable inside .env.local\");\n}\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */\n\n\nlet cached = global.mongo;\n\nif (!cached) {\n  cached = global.mongo = {\n    conn: null,\n    promise: null\n  };\n}\n\nasync function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    };\n    cached.promise = mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient.connect(MONGODB_URI, opts).then(client => {\n      return {\n        client,\n        db: client.db(MONGODB_DB)\n      };\n    });\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96aW5nZXIvLi9zcmMvdXRpbC9tb25nb2RiLmpzPzA4NDYiXSwibmFtZXMiOlsiTU9OR09EQl9VUkkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9EQiIsIkVycm9yIiwiY2FjaGVkIiwiZ2xvYmFsIiwibW9uZ28iLCJjb25uIiwicHJvbWlzZSIsImNvbm5lY3RUb0RhdGFiYXNlIiwib3B0cyIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsIk1vbmdvQ2xpZW50IiwidGhlbiIsImNsaWVudCIsImRiIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUVBLE1BQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFdBQWhDO0FBQ0EsTUFBTUcsVUFBVSxHQUFHRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBL0I7O0FBRUEsSUFBSSxDQUFDSCxXQUFMLEVBQWtCO0FBQ2hCLFFBQU0sSUFBSUksS0FBSixDQUNKLHNFQURJLENBQU47QUFHRDs7QUFFRCxJQUFJLENBQUNELFVBQUwsRUFBaUI7QUFDZixRQUFNLElBQUlDLEtBQUosQ0FDSixxRUFESSxDQUFOO0FBR0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxJQUFJQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsS0FBcEI7O0FBRUEsSUFBSSxDQUFDRixNQUFMLEVBQWE7QUFDWEEsUUFBTSxHQUFHQyxNQUFNLENBQUNDLEtBQVAsR0FBZTtBQUFFQyxRQUFJLEVBQUUsSUFBUjtBQUFjQyxXQUFPLEVBQUU7QUFBdkIsR0FBeEI7QUFDRDs7QUFFTSxlQUFlQyxpQkFBZixHQUFtQztBQUN4QyxNQUFJTCxNQUFNLENBQUNHLElBQVgsRUFBaUI7QUFDZixXQUFPSCxNQUFNLENBQUNHLElBQWQ7QUFDRDs7QUFFRCxNQUFJLENBQUNILE1BQU0sQ0FBQ0ksT0FBWixFQUFxQjtBQUNuQixVQUFNRSxJQUFJLEdBQUc7QUFDWEMscUJBQWUsRUFBRSxJQUROO0FBRVhDLHdCQUFrQixFQUFFO0FBRlQsS0FBYjtBQUtBUixVQUFNLENBQUNJLE9BQVAsR0FBaUJLLHdEQUFBLENBQW9CZCxXQUFwQixFQUFpQ1csSUFBakMsRUFBdUNJLElBQXZDLENBQTZDQyxNQUFELElBQVk7QUFDdkUsYUFBTztBQUNMQSxjQURLO0FBRUxDLFVBQUUsRUFBRUQsTUFBTSxDQUFDQyxFQUFQLENBQVVkLFVBQVY7QUFGQyxPQUFQO0FBSUQsS0FMZ0IsQ0FBakI7QUFNRDs7QUFDREUsUUFBTSxDQUFDRyxJQUFQLEdBQWMsTUFBTUgsTUFBTSxDQUFDSSxPQUEzQjtBQUNBLFNBQU9KLE1BQU0sQ0FBQ0csSUFBZDtBQUNEIiwiZmlsZSI6Ii4vc3JjL3V0aWwvbW9uZ29kYi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSBcIm1vbmdvZGJcIjtcblxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcbmNvbnN0IE1PTkdPREJfREIgPSBwcm9jZXNzLmVudi5NT05HT0RCX0RCO1xuXG5pZiAoIU1PTkdPREJfVVJJKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBcIlBsZWFzZSBkZWZpbmUgdGhlIE1PTkdPREJfVVJJIGVudmlyb25tZW50IHZhcmlhYmxlIGluc2lkZSAuZW52LmxvY2FsXCJcbiAgKTtcbn1cblxuaWYgKCFNT05HT0RCX0RCKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBcIlBsZWFzZSBkZWZpbmUgdGhlIE1PTkdPREJfREIgZW52aXJvbm1lbnQgdmFyaWFibGUgaW5zaWRlIC5lbnYubG9jYWxcIlxuICApO1xufVxuXG4vKipcbiAqIEdsb2JhbCBpcyB1c2VkIGhlcmUgdG8gbWFpbnRhaW4gYSBjYWNoZWQgY29ubmVjdGlvbiBhY3Jvc3MgaG90IHJlbG9hZHNcbiAqIGluIGRldmVsb3BtZW50LiBUaGlzIHByZXZlbnRzIGNvbm5lY3Rpb25zIGdyb3dpbmcgZXhwb25lbnRpYWxseVxuICogZHVyaW5nIEFQSSBSb3V0ZSB1c2FnZS5cbiAqL1xubGV0IGNhY2hlZCA9IGdsb2JhbC5tb25nbztcblxuaWYgKCFjYWNoZWQpIHtcbiAgY2FjaGVkID0gZ2xvYmFsLm1vbmdvID0geyBjb25uOiBudWxsLCBwcm9taXNlOiBudWxsIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25uZWN0VG9EYXRhYmFzZSgpIHtcbiAgaWYgKGNhY2hlZC5jb25uKSB7XG4gICAgcmV0dXJuIGNhY2hlZC5jb25uO1xuICB9XG5cbiAgaWYgKCFjYWNoZWQucHJvbWlzZSkge1xuICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gICAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gICAgfTtcblxuICAgIGNhY2hlZC5wcm9taXNlID0gTW9uZ29DbGllbnQuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0cykudGhlbigoY2xpZW50KSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjbGllbnQsXG4gICAgICAgIGRiOiBjbGllbnQuZGIoTU9OR09EQl9EQiksXG4gICAgICB9O1xuICAgIH0pO1xuICB9XG4gIGNhY2hlZC5jb25uID0gYXdhaXQgY2FjaGVkLnByb21pc2U7XG4gIHJldHVybiBjYWNoZWQuY29ubjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/util/mongodb.js\n");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ (function(module) {

"use strict";
module.exports = require("mongodb");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
var __webpack_exports__ = (__webpack_exec__("./src/pages/api/admin/add-category.js"));
module.exports = __webpack_exports__;

})();